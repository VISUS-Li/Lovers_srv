// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: homecard.proto

package lovers_srv_home

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CARDTYPE int32

const (
	CARDTYPE_CARDTYPE_UNKNOWN CARDTYPE = 0
	CARDTYPE_AD               CARDTYPE = 1
	CARDTYPE_Info             CARDTYPE = 2
)

// Enum value maps for CARDTYPE.
var (
	CARDTYPE_name = map[int32]string{
		0: "CARDTYPE_UNKNOWN",
		1: "AD",
		2: "Info",
	}
	CARDTYPE_value = map[string]int32{
		"CARDTYPE_UNKNOWN": 0,
		"AD":               1,
		"Info":             2,
	}
)

func (x CARDTYPE) Enum() *CARDTYPE {
	p := new(CARDTYPE)
	*p = x
	return p
}

func (x CARDTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CARDTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_homecard_proto_enumTypes[0].Descriptor()
}

func (CARDTYPE) Type() protoreflect.EnumType {
	return &file_homecard_proto_enumTypes[0]
}

func (x CARDTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CARDTYPE.Descriptor instead.
func (CARDTYPE) EnumDescriptor() ([]byte, []int) {
	return file_homecard_proto_rawDescGZIP(), []int{0}
}

type ADTYPE int32

const (
	ADTYPE_ADTYPE_UNKNOWN ADTYPE = 0
	ADTYPE_HOTEL          ADTYPE = 1
	ADTYPE_FOOD           ADTYPE = 2
)

// Enum value maps for ADTYPE.
var (
	ADTYPE_name = map[int32]string{
		0: "ADTYPE_UNKNOWN",
		1: "HOTEL",
		2: "FOOD",
	}
	ADTYPE_value = map[string]int32{
		"ADTYPE_UNKNOWN": 0,
		"HOTEL":          1,
		"FOOD":           2,
	}
)

func (x ADTYPE) Enum() *ADTYPE {
	p := new(ADTYPE)
	*p = x
	return p
}

func (x ADTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ADTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_homecard_proto_enumTypes[1].Descriptor()
}

func (ADTYPE) Type() protoreflect.EnumType {
	return &file_homecard_proto_enumTypes[1]
}

func (x ADTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ADTYPE.Descriptor instead.
func (ADTYPE) EnumDescriptor() ([]byte, []int) {
	return file_homecard_proto_rawDescGZIP(), []int{1}
}

type INFOTYPE int32

const (
	INFOTYPE_INFOTYPE_UNKNOWN INFOTYPE = 0
	INFOTYPE_NEWS             INFOTYPE = 1
)

// Enum value maps for INFOTYPE.
var (
	INFOTYPE_name = map[int32]string{
		0: "INFOTYPE_UNKNOWN",
		1: "NEWS",
	}
	INFOTYPE_value = map[string]int32{
		"INFOTYPE_UNKNOWN": 0,
		"NEWS":             1,
	}
)

func (x INFOTYPE) Enum() *INFOTYPE {
	p := new(INFOTYPE)
	*p = x
	return p
}

func (x INFOTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (INFOTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_homecard_proto_enumTypes[2].Descriptor()
}

func (INFOTYPE) Type() protoreflect.EnumType {
	return &file_homecard_proto_enumTypes[2]
}

func (x INFOTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use INFOTYPE.Descriptor instead.
func (INFOTYPE) EnumDescriptor() ([]byte, []int) {
	return file_homecard_proto_rawDescGZIP(), []int{2}
}

type MEDIATYPE int32

const (
	MEDIATYPE_MEDIATYPE_UNKNOWN MEDIATYPE = 0
	MEDIATYPE_IMAGE             MEDIATYPE = 1
	MEDIATYPE_AUDIO             MEDIATYPE = 2
)

// Enum value maps for MEDIATYPE.
var (
	MEDIATYPE_name = map[int32]string{
		0: "MEDIATYPE_UNKNOWN",
		1: "IMAGE",
		2: "AUDIO",
	}
	MEDIATYPE_value = map[string]int32{
		"MEDIATYPE_UNKNOWN": 0,
		"IMAGE":             1,
		"AUDIO":             2,
	}
)

func (x MEDIATYPE) Enum() *MEDIATYPE {
	p := new(MEDIATYPE)
	*p = x
	return p
}

func (x MEDIATYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MEDIATYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_homecard_proto_enumTypes[3].Descriptor()
}

func (MEDIATYPE) Type() protoreflect.EnumType {
	return &file_homecard_proto_enumTypes[3]
}

func (x MEDIATYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MEDIATYPE.Descriptor instead.
func (MEDIATYPE) EnumDescriptor() ([]byte, []int) {
	return file_homecard_proto_rawDescGZIP(), []int{3}
}

//获取首页卡片状态
type CardRespStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpCardRes  string `protobuf:"bytes,1,opt,name=OpCardRes,proto3" json:"OpCardRes,omitempty"`    //操作卡片状态，上传或获取时成功或失败原因
	OpCardCode int32  `protobuf:"varint,2,opt,name=OpCardCode,proto3" json:"OpCardCode,omitempty"` //操作卡片状态码
}

func (x *CardRespStatus) Reset() {
	*x = CardRespStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homecard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRespStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRespStatus) ProtoMessage() {}

func (x *CardRespStatus) ProtoReflect() protoreflect.Message {
	mi := &file_homecard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRespStatus.ProtoReflect.Descriptor instead.
func (*CardRespStatus) Descriptor() ([]byte, []int) {
	return file_homecard_proto_rawDescGZIP(), []int{0}
}

func (x *CardRespStatus) GetOpCardRes() string {
	if x != nil {
		return x.OpCardRes
	}
	return ""
}

func (x *CardRespStatus) GetOpCardCode() int32 {
	if x != nil {
		return x.OpCardCode
	}
	return 0
}

//首页卡片的基本信息
type HomeCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: form:"CardType"
	CardType CARDTYPE `protobuf:"varint,1,opt,name=CardType,proto3,enum=lovers.srv.home.CARDTYPE" json:"CardType,omitempty" form:"CardType"` //卡片类型，广告、咨询等
	// @inject_tag: form:"AdType"
	AdType ADTYPE `protobuf:"varint,2,opt,name=AdType,proto3,enum=lovers.srv.home.ADTYPE" json:"AdType,omitempty" form:"AdType"` //广告类型
	// @inject_tag: form:"InfoType"
	InfoType INFOTYPE `protobuf:"varint,3,opt,name=InfoType,proto3,enum=lovers.srv.home.INFOTYPE" json:"InfoType,omitempty" form:"InfoType"` //资讯类型
	// @inject_tag: form:"Title"
	Title string `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty" form:"Title"` //卡片标题
	// @inject_tag: form:"Content"
	Content string `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty" form:"Content"` //卡片内容
	// @inject_tag: form:"HomeHtmlUrl"
	HomeHtmlUrl string `protobuf:"bytes,6,opt,name=HomeHtmlUrl,proto3" json:"HomeHtmlUrl,omitempty" form:"HomeHtmlUrl"` //卡片内容的HTML文件Url
	// @inject_tag: form:"TypeDesc"
	TypeDesc string `protobuf:"bytes,7,opt,name=TypeDesc,proto3" json:"TypeDesc,omitempty" form:"TypeDesc"` //卡片类型说明
	// @inject_tag: form:"CreateTime"
	CreateTime int64 `protobuf:"varint,8,opt,name=CreateTime,proto3" json:"CreateTime,omitempty" form:"CreateTime"` //卡片创建时间
	// @inject_tag: form:"ShowIndex"
	ShowIndex int32 `protobuf:"varint,9,opt,name=ShowIndex,proto3" json:"ShowIndex,omitempty" form:"ShowIndex"` //卡片显示排名
	// @inject_tag: form:"IsMainCard"
	IsMainCard bool `protobuf:"varint,10,opt,name=IsMainCard,proto3" json:"IsMainCard,omitempty" form:"IsMainCard"` //卡片是否为主卡片
	// @inject_tag: form:"UpLoadUserId" binding:"required"
	UpLoadUserId string `protobuf:"bytes,11,opt,name=UpLoadUserId,proto3" json:"UpLoadUserId,omitempty" form:"UpLoadUserId" binding:"required"` //上传用户ID
	// @inject_tag: form:"CardId"
	CardId string `protobuf:"bytes,12,opt,name=CardId,proto3" json:"CardId,omitempty" form:"CardId"` //该卡片的ID
	// @inject_tag: form:"HomeImgUrl"
	HomeImgUrl string `protobuf:"bytes,13,opt,name=HomeImgUrl,proto3" json:"HomeImgUrl,omitempty" form:"HomeImgUrl"` //卡片在主页显示的图片
	// @inject_tag: form:"CardMediaType"
	CardMediaType MEDIATYPE `protobuf:"varint,14,opt,name=CardMediaType,proto3,enum=lovers.srv.home.MEDIATYPE" json:"CardMediaType,omitempty" form:"CardMediaType"` //卡片媒体类型
	// @inject_tag: form:"AudioFileUrl"
	AudioFileUrl string `protobuf:"bytes,15,opt,name=AudioFileUrl,proto3" json:"AudioFileUrl,omitempty" form:"AudioFileUrl"` //音频文件地址
	// @inject_tag: form:"AudioLength"
	AudioLength string `protobuf:"bytes,16,opt,name=AudioLength,proto3" json:"AudioLength,omitempty" form:"AudioLength"` //音频长度
	// @inject_tag: form:"ImgMaskType"
	ImgMaskType int32 `protobuf:"varint,17,opt,name=ImgMaskType,proto3" json:"ImgMaskType,omitempty" form:"ImgMaskType"` //在前端图片显示样式
}

func (x *HomeCardInfo) Reset() {
	*x = HomeCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homecard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeCardInfo) ProtoMessage() {}

func (x *HomeCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_homecard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeCardInfo.ProtoReflect.Descriptor instead.
func (*HomeCardInfo) Descriptor() ([]byte, []int) {
	return file_homecard_proto_rawDescGZIP(), []int{1}
}

func (x *HomeCardInfo) GetCardType() CARDTYPE {
	if x != nil {
		return x.CardType
	}
	return CARDTYPE_CARDTYPE_UNKNOWN
}

func (x *HomeCardInfo) GetAdType() ADTYPE {
	if x != nil {
		return x.AdType
	}
	return ADTYPE_ADTYPE_UNKNOWN
}

func (x *HomeCardInfo) GetInfoType() INFOTYPE {
	if x != nil {
		return x.InfoType
	}
	return INFOTYPE_INFOTYPE_UNKNOWN
}

func (x *HomeCardInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HomeCardInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *HomeCardInfo) GetHomeHtmlUrl() string {
	if x != nil {
		return x.HomeHtmlUrl
	}
	return ""
}

func (x *HomeCardInfo) GetTypeDesc() string {
	if x != nil {
		return x.TypeDesc
	}
	return ""
}

func (x *HomeCardInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *HomeCardInfo) GetShowIndex() int32 {
	if x != nil {
		return x.ShowIndex
	}
	return 0
}

func (x *HomeCardInfo) GetIsMainCard() bool {
	if x != nil {
		return x.IsMainCard
	}
	return false
}

func (x *HomeCardInfo) GetUpLoadUserId() string {
	if x != nil {
		return x.UpLoadUserId
	}
	return ""
}

func (x *HomeCardInfo) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

func (x *HomeCardInfo) GetHomeImgUrl() string {
	if x != nil {
		return x.HomeImgUrl
	}
	return ""
}

func (x *HomeCardInfo) GetCardMediaType() MEDIATYPE {
	if x != nil {
		return x.CardMediaType
	}
	return MEDIATYPE_MEDIATYPE_UNKNOWN
}

func (x *HomeCardInfo) GetAudioFileUrl() string {
	if x != nil {
		return x.AudioFileUrl
	}
	return ""
}

func (x *HomeCardInfo) GetAudioLength() string {
	if x != nil {
		return x.AudioLength
	}
	return ""
}

func (x *HomeCardInfo) GetImgMaskType() int32 {
	if x != nil {
		return x.ImgMaskType
	}
	return 0
}

type GetMainCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *GetMainCardReq) Reset() {
	*x = GetMainCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homecard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMainCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMainCardReq) ProtoMessage() {}

func (x *GetMainCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_homecard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMainCardReq.ProtoReflect.Descriptor instead.
func (*GetMainCardReq) Descriptor() ([]byte, []int) {
	return file_homecard_proto_rawDescGZIP(), []int{2}
}

func (x *GetMainCardReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetMainCardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespStatus   *CardRespStatus `protobuf:"bytes,1,opt,name=RespStatus,proto3" json:"RespStatus,omitempty"`
	MainCardInfo []*HomeCardInfo `protobuf:"bytes,2,rep,name=MainCardInfo,proto3" json:"MainCardInfo,omitempty"`
}

func (x *GetMainCardResp) Reset() {
	*x = GetMainCardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homecard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMainCardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMainCardResp) ProtoMessage() {}

func (x *GetMainCardResp) ProtoReflect() protoreflect.Message {
	mi := &file_homecard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMainCardResp.ProtoReflect.Descriptor instead.
func (*GetMainCardResp) Descriptor() ([]byte, []int) {
	return file_homecard_proto_rawDescGZIP(), []int{3}
}

func (x *GetMainCardResp) GetRespStatus() *CardRespStatus {
	if x != nil {
		return x.RespStatus
	}
	return nil
}

func (x *GetMainCardResp) GetMainCardInfo() []*HomeCardInfo {
	if x != nil {
		return x.MainCardInfo
	}
	return nil
}

type GetCardByCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: form:"StartTime"
	StartTime int64 `protobuf:"varint,1,opt,name=StartTime,proto3" json:"StartTime,omitempty" form:"StartTime"`
	// @inject_tag: form:"EndTime"
	EndTime int64 `protobuf:"varint,2,opt,name=EndTime,proto3" json:"EndTime,omitempty" form:"EndTime"`
	// @inject_tag: form:"CardCount"
	CardCount int32 `protobuf:"varint,3,opt,name=CardCount,proto3" json:"CardCount,omitempty" form:"CardCount"`
}

func (x *GetCardByCountReq) Reset() {
	*x = GetCardByCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homecard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCardByCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCardByCountReq) ProtoMessage() {}

func (x *GetCardByCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_homecard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCardByCountReq.ProtoReflect.Descriptor instead.
func (*GetCardByCountReq) Descriptor() ([]byte, []int) {
	return file_homecard_proto_rawDescGZIP(), []int{4}
}

func (x *GetCardByCountReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetCardByCountReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetCardByCountReq) GetCardCount() int32 {
	if x != nil {
		return x.CardCount
	}
	return 0
}

type GetCardByCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardList []*HomeCardInfo `protobuf:"bytes,1,rep,name=CardList,proto3" json:"CardList,omitempty"`
}

func (x *GetCardByCountResp) Reset() {
	*x = GetCardByCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homecard_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCardByCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCardByCountResp) ProtoMessage() {}

func (x *GetCardByCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_homecard_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCardByCountResp.ProtoReflect.Descriptor instead.
func (*GetCardByCountResp) Descriptor() ([]byte, []int) {
	return file_homecard_proto_rawDescGZIP(), []int{5}
}

func (x *GetCardByCountResp) GetCardList() []*HomeCardInfo {
	if x != nil {
		return x.CardList
	}
	return nil
}

type GetCardByIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: form:"StartIndex"
	StartIndex int32 `protobuf:"varint,1,opt,name=StartIndex,proto3" json:"StartIndex,omitempty" form:"StartIndex"`
	// @inject_tag: form:"EndIndex"
	EndIndex int32 `protobuf:"varint,2,opt,name=EndIndex,proto3" json:"EndIndex,omitempty" form:"EndIndex"`
}

func (x *GetCardByIndexReq) Reset() {
	*x = GetCardByIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homecard_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCardByIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCardByIndexReq) ProtoMessage() {}

func (x *GetCardByIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_homecard_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCardByIndexReq.ProtoReflect.Descriptor instead.
func (*GetCardByIndexReq) Descriptor() ([]byte, []int) {
	return file_homecard_proto_rawDescGZIP(), []int{6}
}

func (x *GetCardByIndexReq) GetStartIndex() int32 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *GetCardByIndexReq) GetEndIndex() int32 {
	if x != nil {
		return x.EndIndex
	}
	return 0
}

type GetCardByIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardList       []*HomeCardInfo `protobuf:"bytes,1,rep,name=CardList,proto3" json:"CardList,omitempty"`
	GetCardCount   int32           `protobuf:"varint,2,opt,name=GetCardCount,proto3" json:"GetCardCount,omitempty"`     //CardList中卡片的数量
	TotalCardCount int32           `protobuf:"varint,3,opt,name=TotalCardCount,proto3" json:"TotalCardCount,omitempty"` //整个数据库总共有多少卡片数量
}

func (x *GetCardByIndexResp) Reset() {
	*x = GetCardByIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homecard_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCardByIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCardByIndexResp) ProtoMessage() {}

func (x *GetCardByIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_homecard_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCardByIndexResp.ProtoReflect.Descriptor instead.
func (*GetCardByIndexResp) Descriptor() ([]byte, []int) {
	return file_homecard_proto_rawDescGZIP(), []int{7}
}

func (x *GetCardByIndexResp) GetCardList() []*HomeCardInfo {
	if x != nil {
		return x.CardList
	}
	return nil
}

func (x *GetCardByIndexResp) GetGetCardCount() int32 {
	if x != nil {
		return x.GetCardCount
	}
	return 0
}

func (x *GetCardByIndexResp) GetTotalCardCount() int32 {
	if x != nil {
		return x.TotalCardCount
	}
	return 0
}

type PostCardInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostCardInfo *HomeCardInfo `protobuf:"bytes,1,opt,name=PostCardInfo,proto3" json:"PostCardInfo,omitempty"`
}

func (x *PostCardInfoReq) Reset() {
	*x = PostCardInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homecard_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCardInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCardInfoReq) ProtoMessage() {}

func (x *PostCardInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_homecard_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCardInfoReq.ProtoReflect.Descriptor instead.
func (*PostCardInfoReq) Descriptor() ([]byte, []int) {
	return file_homecard_proto_rawDescGZIP(), []int{8}
}

func (x *PostCardInfoReq) GetPostCardInfo() *HomeCardInfo {
	if x != nil {
		return x.PostCardInfo
	}
	return nil
}

type PostCardInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespStatus *CardRespStatus `protobuf:"bytes,1,opt,name=RespStatus,proto3" json:"RespStatus,omitempty"`
}

func (x *PostCardInfoResp) Reset() {
	*x = PostCardInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homecard_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCardInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCardInfoResp) ProtoMessage() {}

func (x *PostCardInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_homecard_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCardInfoResp.ProtoReflect.Descriptor instead.
func (*PostCardInfoResp) Descriptor() ([]byte, []int) {
	return file_homecard_proto_rawDescGZIP(), []int{9}
}

func (x *PostCardInfoResp) GetRespStatus() *CardRespStatus {
	if x != nil {
		return x.RespStatus
	}
	return nil
}

var File_homecard_proto protoreflect.FileDescriptor

var file_homecard_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x68, 0x6f, 0x6d,
	0x65, 0x22, 0x4e, 0x0a, 0x0e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x70, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x70, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x70, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4f, 0x70, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0xff, 0x04, 0x0a, 0x0c, 0x48, 0x6f, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x35, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x72,
	0x76, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x2e, 0x43, 0x41, 0x52, 0x44, 0x54, 0x59, 0x50, 0x45, 0x52,
	0x08, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x41, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6c, 0x6f, 0x76, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x2e, 0x41, 0x44, 0x54, 0x59,
	0x50, 0x45, 0x52, 0x06, 0x41, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x49, 0x6e,
	0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6c,
	0x6f, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x2e, 0x49,
	0x4e, 0x46, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x48, 0x6f, 0x6d, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x55, 0x72, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x48, 0x6f, 0x6d, 0x65, 0x48, 0x74, 0x6d, 0x6c,
	0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x63, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a,
	0x0a, 0x49, 0x73, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x49, 0x73, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x55, 0x70, 0x4c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x55, 0x70, 0x4c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x48, 0x6f, 0x6d,
	0x65, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x48,
	0x6f, 0x6d, 0x65, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x40, 0x0a, 0x0d, 0x43, 0x61, 0x72,
	0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x68, 0x6f,
	0x6d, 0x65, 0x2e, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0d, 0x43, 0x61,
	0x72, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6d, 0x67, 0x4d, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x49, 0x6d, 0x67, 0x4d, 0x61, 0x73, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x95, 0x01,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x72, 0x76, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x52, 0x65, 0x73, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x41, 0x0a, 0x0c, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x6f, 0x76, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x69, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x4f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x6f, 0x76, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x4f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x45, 0x6e, 0x64, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0x9b, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x08, 0x43, 0x61, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x6f,
	0x76, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x2e, 0x48, 0x6f,
	0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x43, 0x61, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x54, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x41, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x6f, 0x76, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x2e, 0x48, 0x6f, 0x6d, 0x65,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x53, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x52, 0x65,
	0x73, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x68, 0x6f, 0x6d, 0x65,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x0a, 0x52, 0x65, 0x73, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x32, 0x0a, 0x08, 0x43,
	0x41, 0x52, 0x44, 0x54, 0x59, 0x50, 0x45, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x41, 0x52, 0x44, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a,
	0x02, 0x41, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x02, 0x2a,
	0x31, 0x0a, 0x06, 0x41, 0x44, 0x54, 0x59, 0x50, 0x45, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x44, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x48, 0x4f, 0x54, 0x45, 0x4c, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x4f, 0x4f, 0x44,
	0x10, 0x02, 0x2a, 0x2a, 0x0a, 0x08, 0x49, 0x4e, 0x46, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x14,
	0x0a, 0x10, 0x49, 0x4e, 0x46, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x45, 0x57, 0x53, 0x10, 0x01, 0x2a, 0x38,
	0x0a, 0x09, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x59, 0x50, 0x45, 0x12, 0x15, 0x0a, 0x11, 0x4d,
	0x45, 0x44, 0x49, 0x41, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x02, 0x32, 0xeb, 0x02, 0x0a, 0x04, 0x68, 0x6f, 0x6d,
	0x65, 0x12, 0x52, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x1f, 0x2e, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x68, 0x6f,
	0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x68,
	0x6f, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x72, 0x76, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6c, 0x6f,
	0x76, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x2e, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x72,
	0x76, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6c, 0x6f, 0x76, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x42, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x55, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x20, 0x2e, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x68, 0x6f, 0x6d,
	0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x21, 0x2e, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x68,
	0x6f, 0x6d, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_homecard_proto_rawDescOnce sync.Once
	file_homecard_proto_rawDescData = file_homecard_proto_rawDesc
)

func file_homecard_proto_rawDescGZIP() []byte {
	file_homecard_proto_rawDescOnce.Do(func() {
		file_homecard_proto_rawDescData = protoimpl.X.CompressGZIP(file_homecard_proto_rawDescData)
	})
	return file_homecard_proto_rawDescData
}

var file_homecard_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_homecard_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_homecard_proto_goTypes = []interface{}{
	(CARDTYPE)(0),              // 0: lovers.srv.home.CARDTYPE
	(ADTYPE)(0),                // 1: lovers.srv.home.ADTYPE
	(INFOTYPE)(0),              // 2: lovers.srv.home.INFOTYPE
	(MEDIATYPE)(0),             // 3: lovers.srv.home.MEDIATYPE
	(*CardRespStatus)(nil),     // 4: lovers.srv.home.CardRespStatus
	(*HomeCardInfo)(nil),       // 5: lovers.srv.home.HomeCardInfo
	(*GetMainCardReq)(nil),     // 6: lovers.srv.home.GetMainCardReq
	(*GetMainCardResp)(nil),    // 7: lovers.srv.home.GetMainCardResp
	(*GetCardByCountReq)(nil),  // 8: lovers.srv.home.GetCardByCountReq
	(*GetCardByCountResp)(nil), // 9: lovers.srv.home.GetCardByCountResp
	(*GetCardByIndexReq)(nil),  // 10: lovers.srv.home.GetCardByIndexReq
	(*GetCardByIndexResp)(nil), // 11: lovers.srv.home.GetCardByIndexResp
	(*PostCardInfoReq)(nil),    // 12: lovers.srv.home.PostCardInfoReq
	(*PostCardInfoResp)(nil),   // 13: lovers.srv.home.PostCardInfoResp
}
var file_homecard_proto_depIdxs = []int32{
	0,  // 0: lovers.srv.home.HomeCardInfo.CardType:type_name -> lovers.srv.home.CARDTYPE
	1,  // 1: lovers.srv.home.HomeCardInfo.AdType:type_name -> lovers.srv.home.ADTYPE
	2,  // 2: lovers.srv.home.HomeCardInfo.InfoType:type_name -> lovers.srv.home.INFOTYPE
	3,  // 3: lovers.srv.home.HomeCardInfo.CardMediaType:type_name -> lovers.srv.home.MEDIATYPE
	4,  // 4: lovers.srv.home.GetMainCardResp.RespStatus:type_name -> lovers.srv.home.CardRespStatus
	5,  // 5: lovers.srv.home.GetMainCardResp.MainCardInfo:type_name -> lovers.srv.home.HomeCardInfo
	5,  // 6: lovers.srv.home.GetCardByCountResp.CardList:type_name -> lovers.srv.home.HomeCardInfo
	5,  // 7: lovers.srv.home.GetCardByIndexResp.CardList:type_name -> lovers.srv.home.HomeCardInfo
	5,  // 8: lovers.srv.home.PostCardInfoReq.PostCardInfo:type_name -> lovers.srv.home.HomeCardInfo
	4,  // 9: lovers.srv.home.PostCardInfoResp.RespStatus:type_name -> lovers.srv.home.CardRespStatus
	6,  // 10: lovers.srv.home.home.GetMainCard:input_type -> lovers.srv.home.GetMainCardReq
	8,  // 11: lovers.srv.home.home.GetCardByCount:input_type -> lovers.srv.home.GetCardByCountReq
	10, // 12: lovers.srv.home.home.GetCardByIndex:input_type -> lovers.srv.home.GetCardByIndexReq
	12, // 13: lovers.srv.home.home.PostCardInfo:input_type -> lovers.srv.home.PostCardInfoReq
	7,  // 14: lovers.srv.home.home.GetMainCard:output_type -> lovers.srv.home.GetMainCardResp
	9,  // 15: lovers.srv.home.home.GetCardByCount:output_type -> lovers.srv.home.GetCardByCountResp
	11, // 16: lovers.srv.home.home.GetCardByIndex:output_type -> lovers.srv.home.GetCardByIndexResp
	13, // 17: lovers.srv.home.home.PostCardInfo:output_type -> lovers.srv.home.PostCardInfoResp
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_homecard_proto_init() }
func file_homecard_proto_init() {
	if File_homecard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_homecard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRespStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homecard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homecard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMainCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homecard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMainCardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homecard_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCardByCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homecard_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCardByCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homecard_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCardByIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homecard_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCardByIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homecard_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCardInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homecard_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCardInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_homecard_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_homecard_proto_goTypes,
		DependencyIndexes: file_homecard_proto_depIdxs,
		EnumInfos:         file_homecard_proto_enumTypes,
		MessageInfos:      file_homecard_proto_msgTypes,
	}.Build()
	File_homecard_proto = out.File
	file_homecard_proto_rawDesc = nil
	file_homecard_proto_goTypes = nil
	file_homecard_proto_depIdxs = nil
}
